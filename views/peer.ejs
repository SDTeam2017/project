<!DOCTYPE html>
<html>
  <head>
    <title>peer</title>
        <link rel='stylesheet' href='/stylesheets/style.css'>

  </head>
  <body>
    <h1 class="aliasname" id="alias_id"></h1>
	  <video id="videobox" ></video>
    <div class="aliaslist">
      <h2 align="center">Alias List</h2>
      <ul style="list-style-type:none; padding-left:0" id="alias_list">
        <li>Coffee</li>
      </ul> 
    </div>
  </body>
</html>

<script src="/javascripts/peer.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script >
  var peer_id, name, conn;
  var name;
  var host= <%- JSON.stringify(host) %>

	var peer = new Peer({host: host, port: 9000, path: '/', debug: 3});
  var socket = io.connect();
  peer.on('open', function(){

     function change_name (name){
        var exists=true;
       while(exists==true){
          name = prompt("Please enter an Alias Name for this device:", peer.id);
          if (name== null||/^\s/.test(name)==true||name=="") {
            alert("Alias name cannot be blank or have spaces in front");
          }
          else{
            exists=false;
            socket.emit('check_peer_name',name);
          }
        }
        return name;
     }
     
     name=change_name(name);
                
      socket.on('name_result',function(result){
        if(result==false)
        {
           var obj={};
           obj[peer.id]=name;
           socket.emit('addnewpeer', obj);
           document.getElementById("alias_id").innerHTML ="Alias Name: "+name;
        }
        else
        {
          alert("Alias name exists. Set to default");
          name=change_name(name);
        }
      });

      document.getElementById("alias_id").innerHTML ="Alias Name: "+peer.id;

        

    
     //document.getElementById("alias_id").innerHTML ="Alias Name: "+name;



  
  });
  
   //fix later to getusermedia.js for all devices to work
  navigator.mediaDevices.getUserMedia = navigator.mediaDevices.getUserMedia ||    
                         navigator.mediaDevices.webkitGetUserMedia ||
                         navigator.mediaDevices.mozGetUserMedia;



</script>
